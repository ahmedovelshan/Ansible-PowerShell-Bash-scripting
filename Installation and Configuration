

Install MariaDB Server

apt update
apt upgrade

apt install software-properties-common
sudo apt-key adv --fetch-keys 'https://mariadb.org/mariadb_release_signing_key.asc'


add-apt-repository 'deb [arch=amd64,arm64,ppc64el] http://mirrors.ukfast.co.uk/sites/mariadb/repo/10.5/ubuntu focal main'


apt update
apt install mariadb-server

mysql_secure_installation


mysql -u root -p


ALTER USER 'root'@'localhost' IDENTIFIED BY 'XXXXX';

FLUSH PRIVILEGES;

systemctl disable --now systemd-resolved

rm -rf /etc/resolv.conf
echo "nameserver 8.8.8.8" > /etc/resolv.conf

############################################################

Install PowerDNS

apt install pdns-server

apt install pdns-backend-mysql

>create database pda;
>grant all privileges on pda.* TO 'pda'@'localhost' identified by 'XXXXXXXX';
>flush privileges;

mysql -u pda -p pda < /usr/share/pdns-backend-mysql/schema/schema.mysql.sql 


vim /etc/powerdns/pdns.d/pdns.local.gmysql.conf


# MySQL Configuration
#
# Launch gmysql backend
launch+=gmysql

# gmysql parameters
gmysql-host=127.0.0.1
gmysql-port=3306
gmysql-dbname=pda
gmysql-user=pda
gmysql-password=XXXXXX
gmysql-dnssec=yes
# gmysql-socket=



chmod 640 /etc/powerdns/pdns.d/pdns.local.gmysql.conf


#############################################################################################


systemctl stop pdns.service
pdns_server --daemon=no --guardian=no --loglevel=9

apt install net-tools

systemctl start pdns
systemctl enable pdns

netstat -alnp4 | grep pdns

###########################################################################################


Install PowerDNS-Admin


apt install python3-dev

apt install libsasl2-dev libldap2-dev libssl-dev libxml2-dev libxslt1-dev libxmlsec1-dev libffi-dev pkg-config apt-transport-https virtualenv build-essential libmariadb-dev git python3-flask -y

sudo apt install mariadb-server mariadb-client


curl -sL https://deb.nodesource.com/setup_14.x | bash -
apt install -y nodejs

sudo curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
sudo apt update -y
sudo apt install -y yarn


mkdir /opt/web
mkdir /opt/web/powerdns-admin

git clone https://github.com/ngoduykhanh/PowerDNS-Admin.git /opt/web/powerdns-admin
cd /opt/web/powerdns-admin
apt install python3.8-venv
python3 -mvenv ./venv



source ./venv/bin/activate
pip install --upgrade pip
pip install -r requirements.txt



cp /opt/web/powerdns-admin/configs/development.py /opt/web/powerdns-admin/configs/production.py
vim /opt/web/powerdns-admin/configs/production.py

change SECRET KEY
BIND Address
SALT
PORT 80
DB USER PASSWORD NAME


######################################################################################

Configuration PowerDNS-Admin

cd /opt/web/powerdns-admin
source ./venv/bin/activate

export FLASK_CONF=../configs/production.py

flask db upgrade

yarn install --pure-lockfile
flask assets build


###################################################################################

To run PowerDNS Admin

cd /opt/web/powerdns-admin
source ./venv/bin/activate

export FLASK_CONF=../configs/production.py

./run.py


############################################################################

Enable PowerDNS API access


vim /etc/powerdns/pdns.conf
Change below config

api=yes
api-key=ahqu4eiv2vaideep8AQu9nav5Aing0

Login http://10.220.217.20:9191

Create first admin account
Add below config
PDNS API URL   http://127.0.0.1:8081
PDNS API KEY   2E4Mef3am5ggCg34PL8x

####################################################################################

Configure systemd service

sudo vim /etc/systemd/system/powerdns-admin.service

_______________________________________________________________

[Unit]
Description=PowerDNS-Admin
Requires=powerdns-admin.socket
After=network.target

[Service]
PIDFile=/run/powerdns-admin/pid
User=pdns
Group=pdns
WorkingDirectory=/opt/web/powerdns-admin
ExecStart=/opt/web/powerdns-admin/venv/bin/gunicorn --pid /run/powerdns-admin/pid --bind unix:/run/powerdns-admin/socket 'powerdnsadmin:create_app()'
ExecReload=/bin/kill -s HUP $MAINPID
ExecStop=/bin/kill -s TERM $MAINPID
PrivateTmp=true

[Install]
WantedBy=multi-user.target

_______________________________________________________________



sudo systemctl edit powerdns-admin.service

[Service]
Environment="FLASK_CONF=../configs/production.py"


$ sudo vim /etc/systemd/system/powerdns-admin.socket


_______________________________________________________________

[Unit]
Description=PowerDNS-Admin socket

[Socket]
ListenStream=/run/powerdns-admin/socket

[Install]
WantedBy=sockets.target

_______________________________________________________________

$ sudo vim /etc/tmpfiles.d/powerdns-admin.conf

d /run/powerdns-admin 0755 pdns pdns -


chown -R pdns: /run/pdnsadmin/

chown -R pdns: /opt/web/powerdns-admin/powerdnsadmin/

chown -R pdns:pdns /etc/powerdns/pdns.d/

####################################################################3

NGINX Installation and configuration

sudo apt install nginx

systemctl status nginx

vim /etc/nginx/conf.d/pdns-admin.conf


_______________________________________________________________

server {
  listen *:80;
  server_name               ns01-adm.example.net;

  index                     index.html index.htm index.php;
  root                      /opt/web/powerdns-admin;
  access_log                /var/log/nginx/powerdns-admin.local.access.log combined;
  error_log                 /var/log/nginx/powerdns-admin.local.error.log;

  client_max_body_size              10m;
  client_body_buffer_size           128k;
  proxy_redirect                    off;
  proxy_connect_timeout             90;
  proxy_send_timeout                90;
  proxy_read_timeout                90;
  proxy_buffers                     32 4k;
  proxy_buffer_size                 8k;
  proxy_set_header                  Host $host;
  proxy_set_header                  X-Real-IP $remote_addr;
  proxy_set_header                  X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_headers_hash_bucket_size    64;

  location ~ ^/static/  {
    include  /etc/nginx/mime.types;
    root /opt/web/powerdns-admin/powerdnsadmin;

    location ~*  \.(jpg|jpeg|png|gif)$ {
      expires 365d;
    }

    location ~* ^.+.(css|js)$ {
      expires 7d;
    }
  }

  location / {
    proxy_pass            http://unix:/run/powerdns-admin/socket;
    proxy_read_timeout    120;
    proxy_connect_timeout 120;
    proxy_redirect        off;
  }

}


_______________________________________________________________

mv /etc/nginx/sites-enabled/default{,.old}
nginx -t


###################################################################

vim /etc/hosts

10.220.217.20    ns01-adm.example.net

##################################################################

systemctl restart nginx

systemctl enable powerdns-admin

#######################################################################################
Configure Replication

Master Server
vim /etc/powerdns/pdns.conf

allow-axfr-ips=10.230.217.20
also-notify=10.230.217.20
master=yes
slave=no
slave-renotify=yes


Slave Server
vim /etc/powerdns/pdns.conf


master=no
slave=yes
slave-cycle-interval=60
allow-notify-from=10.220.217.20
allow-unsigned-notify=yes
allow-dnsupdate-from=10.220.217.20
superslave=yes
allow-axfr-ips=10.220.217.20
also-notify=10.220.217.20


mysql -u root
use pdns;
insert into supermasters values ('10.220.217.20', 'ns2.example.com', 'admin');





































mysql -u pdnsadmin -p powerdns < /usr/share/pdns-backend-mysql/schema/schema.mysql.sql 


# MySQL Configuration
#
# Launch gmysql backend
launch+=gmysql

# gmysql parameters
gmysql-host=127.0.0.1
gmysql-port=3306
gmysql-dbname=powerdns
gmysql-user=pdnsadmin
gmysql-password=XXXXX
gmysql-dnssec=yes
# gmysql-socket=


grant all privileges on pda.* TO 'pda'@'localhost' identified by 'XXXXXXX';
